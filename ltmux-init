#!/bin/bash

devdir=$HOME/src

# We first start up the development session, and attach to it. The next
# invocation will open a grouped session to the testing window, the next
# will open a grouped session to the documentation window, and further
# invocations will attach to the main development session

if tmux list-sessions -F "#S" | grep '^dev$'; then
    echo
    
else
    # If there are no development sessions.

    # Create our session with the windows edit, test and docs
    tmux new-session -d -c $devdir -n edit -s dev
    tmux new-window  -c $devdir -t dev:1 -n test
    tmux new-window  -c $devdir -t dev:2  -n docs

    # Split the test window into a compiling and running window.
    tmux split-window -c $devdir -t dev:test.0

    # Open emacs in the editing window
    tmux send-keys -t dev:edit.0 "emacs -nw ." Enter

    # Use lbanner to label all the other windows
    tmux send-keys -t dev:test.0 "lbanner Compile" Enter
    tmux send-keys -t dev:test.1 "lbanner Run"     Enter
    tmux send-keys -t dev:docs.0 "lbanner Docs"    Enter

    # Select the editing window with our session
    tmux select-window -t dev:edit
fi 

texdir=$HOME/doc/tex

if tmux list-sessions -F "#S" | grep '^tex$'; then
    echo
else
    # If there are no development sessions.
    # Create our session with the windows edit, test and docs
    tmux new-session -d -c $texdir -n edit -s tex
    tmux new-window     -c $texdir -t tex:1 -n compile

    # Open emacs in the editing window
    tmux send-keys -t tex:edit.0 "emacs -nw ." Enter

    # Use lbanner to label all the other windows
    tmux send-keys -t tex:compile.0 "lbanner compile; ltex-compile" Enter
 
    # Select the editing window with our session
    tmux select-window -t tex:edit
fi 
